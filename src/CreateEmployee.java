
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Administrator
 */
public class CreateEmployee extends javax.swing.JFrame {

    /**
     * Creates new form CreateEmployee
     */
   
    public CreateEmployee() {
        initComponents();
        Connect();
        fetchAllData("employee");
        fetchEmployeeData();
    }
    
   
    Connection con;
    PreparedStatement prStmt;
    ResultSet rsSet;
    DefaultTableModel table;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nameInput = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        passwordInput = new javax.swing.JPasswordField();
        Create = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        emailInput = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        addressInput = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        maleRadio = new javax.swing.JRadioButton();
        femaleRadio = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        salaryInput = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        roleCbb = new javax.swing.JComboBox<>();
        editBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "EMPLOYEE", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tw Cen MT", 0, 24))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jLabel1.setText("Full name :");

        jLabel2.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jLabel2.setText("Password :");

        Create.setBackground(new java.awt.Color(204, 204, 204));
        Create.setFont(new java.awt.Font("Tw Cen MT", 1, 24)); // NOI18N
        Create.setText("Create");
        Create.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jLabel3.setText("Email :");

        jLabel4.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jLabel4.setText("Address :");

        addressInput.setColumns(20);
        addressInput.setRows(5);
        jScrollPane1.setViewportView(addressInput);

        jLabel6.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jLabel6.setText("Gender :");

        maleRadio.setText("Male");
        maleRadio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                maleRadioMouseClicked(evt);
            }
        });

        femaleRadio.setSelected(true);
        femaleRadio.setText("Female");
        femaleRadio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                femaleRadioMouseClicked(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jLabel5.setText("Salary :");

        jLabel7.setText("VND");

        jLabel8.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jLabel8.setText("Role :");

        roleCbb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Employee", "Admin" }));

        editBtn.setBackground(new java.awt.Color(204, 204, 204));
        editBtn.setFont(new java.awt.Font("Tw Cen MT", 1, 24)); // NOI18N
        editBtn.setText("Edit");
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });

        deleteBtn.setBackground(new java.awt.Color(204, 204, 204));
        deleteBtn.setFont(new java.awt.Font("Tw Cen MT", 1, 24)); // NOI18N
        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(salaryInput))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(emailInput))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(jLabel6)
                                .addGap(33, 33, 33)
                                .addComponent(maleRadio)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(femaleRadio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(roleCbb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(passwordInput, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(editBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Create, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(maleRadio)
                    .addComponent(femaleRadio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(passwordInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(salaryInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(jLabel8)
                        .addComponent(roleCbb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Create, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "LIST EMPLOYEES", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tw Cen MT", 0, 24))); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Email", "Role", "Salary"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 535, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 198, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void Connect(){
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/coffee_shop", "root", "");
        }catch (SQLException ex) {
                Logger.getLogger(CreateEmployee.class.getName()).log(Level.SEVERE, null, ex);
     
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CreateEmployee.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    public void ResetForm(){
       nameInput.setText("");
       emailInput.setText("");
       addressInput.setText("");
       salaryInput.setText("");
       passwordInput.setText("");
    }
    
    public ResultSet fetchAllData(String tableDB){
        
        
        try {
            String query = "SELECT * FROM "+tableDB;
            prStmt = con.prepareStatement(query);
            rsSet = prStmt.executeQuery();
            
                    } catch (SQLException ex) {
            Logger.getLogger(CreateEmployee.class.getName()).log(Level.SEVERE, null, ex);
        }
        return rsSet;
    }
    
    public ResultSet fetchSingleEmployee(String idFetch){
        
        
        try {
            String query = "SELECT * FROM employee WHERE employeeID="+idFetch;
            prStmt = con.prepareStatement(query);
            rsSet = prStmt.executeQuery();
            
                    } catch (SQLException ex) {
            Logger.getLogger(CreateEmployee.class.getName()).log(Level.SEVERE, null, ex);
        }
        return rsSet;
    }
    
    public void fetchEmployeeData(){
        
        try {
            int cursor;
            rsSet = fetchAllData("employee");
            ResultSetMetaData metaData = rsSet.getMetaData();
            cursor = metaData.getColumnCount();
            
            //create a Table model
            table = (DefaultTableModel)jTable1.getModel();
            table.setRowCount(0);
            
            while(rsSet.next())
            {
                //Each result get values
//              id , name , role, salary
                int id = rsSet.getInt("employeeID");
                int salary = rsSet.getInt("salary");
                String email = rsSet.getString("email");
                String name = rsSet.getString("name");
                String role = rsSet.getString("role");
                
                //add to Table model a new Row  with these values fetched^^
                table.addRow(new Object[]{id,name,email, role , salary});
                
                jTable1.setModel(table);
            }
        } catch (SQLException ex) {
            Logger.getLogger(CreateEmployee.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    private void CreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateActionPerformed
        // TODO add your handling code here:
        //verify fields not blank
        if("".equals(nameInput.getText())){
            JOptionPane.showMessageDialog(this, "Name required !");
        }else if("".equals(emailInput.getText())){
            JOptionPane.showMessageDialog(this, "Email required !");
        }else if("".equals(salaryInput.getText())){
            JOptionPane.showMessageDialog(this, "Salary required !");
        }else if("".equals(passwordInput.getText())){
            JOptionPane.showMessageDialog(this, "Password required !");
        }else{
            try {
                //Create new employee
                String gender ="";
                //get Gender 
                if(femaleRadio.isSelected()){
                    gender = femaleRadio.getText();
                }else if(maleRadio.isSelected()){
                    gender = maleRadio.getText();
                }
               
                String name = nameInput.getText();
                String email = emailInput.getText();
                String address = addressInput.getText();
                String role = roleCbb.getSelectedItem().toString();
                int salary = Integer.parseInt(salaryInput.getText());
                
                String password = passwordInput.getText();
//                String rs = name + " "+email + " "+address + " "+role + " "+salary + " "+gender + " "+password;
//                System.out.println(rs);
                //exec a sql query
                
                String sql = "INSERT INTO employee(name, role, salary, email, gender, address, password) VALUES (?,?,?,?,?,?,?)";
                prStmt = con.prepareStatement(sql);
                // replace these with ? value in sql query :D
                prStmt.setString(1, name);
                prStmt.setString(2, role);
                prStmt.setInt(3, salary);
                prStmt.setString(4, email);
                prStmt.setString(5, gender);
                prStmt.setString(6, address);
                prStmt.setString(7, password);
                prStmt.executeUpdate();
                JOptionPane.showMessageDialog(this, "Created Successful :D");
                fetchEmployeeData();
                ResetForm();
                
            } catch (SQLException ex) {
                Logger.getLogger(CreateEmployee.class.getName()).log(Level.SEVERE, null, ex);
            }
             
        }
    }//GEN-LAST:event_CreateActionPerformed

    private void femaleRadioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_femaleRadioMouseClicked
        // TODO add your handling code here:
        maleRadio.setSelected(false);
    }//GEN-LAST:event_femaleRadioMouseClicked

    private void maleRadioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_maleRadioMouseClicked
        // TODO add your handling code here:
        femaleRadio.setSelected(false);
    }//GEN-LAST:event_maleRadioMouseClicked

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        // TODO add your handling code here:
        
        // TODO add your handling code here:
        //verify fields not blank
        if("".equals(nameInput.getText())){
            JOptionPane.showMessageDialog(this, "Name required !");
        }else if("".equals(emailInput.getText())){
            JOptionPane.showMessageDialog(this, "Email required !");
        }else if("".equals(salaryInput.getText())){
            JOptionPane.showMessageDialog(this, "Salary required !");
        }else if("".equals(passwordInput.getText())){
            JOptionPane.showMessageDialog(this, "Password required !");
        }else{
            try {
                //Create new employee
                String gender ="";
                //get Gender 
                if(femaleRadio.isSelected()){
                    gender = femaleRadio.getText();
                }else if(maleRadio.isSelected()){
                    gender = maleRadio.getText();
                }
               
                String name = nameInput.getText();
                String email = emailInput.getText();
                String address = addressInput.getText();
                String role = roleCbb.getSelectedItem().toString();
                int salary = Integer.parseInt(salaryInput.getText());
                
                String password = passwordInput.getText();
//                String rs = name + " "+email + " "+address + " "+role + " "+salary + " "+gender + " "+password;
//                System.out.println(rs);
                String id = jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 0).toString();
                //exec a sql query
                
                String sql = "UPDATE employee SET name = ?, role =?, salary = ?, email = ?, gender = ?, address = ?, password = ? WHERE employeeID = ?";
                prStmt = con.prepareStatement(sql);
                // replace these with ? value in sql query :D
                prStmt.setString(1, name);
                prStmt.setString(2, role);
                prStmt.setInt(3, salary);
                prStmt.setString(4, email);
                prStmt.setString(5, gender);
                prStmt.setString(6, address);
                prStmt.setString(7, password);
                prStmt.setInt(8, Integer.parseInt(id));
                prStmt.executeUpdate();
                JOptionPane.showMessageDialog(this, "Update Successfull :D");
                fetchEmployeeData();
                ResetForm();
                Create.setEnabled(true);
                
            } catch (SQLException ex) {
                Logger.getLogger(CreateEmployee.class.getName()).log(Level.SEVERE, null, ex);
            }
             
        }
    }//GEN-LAST:event_editBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
            String id = jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 0).toString();
           String sql = "DELETE FROM employee WHERE employeeID = ?";
        try {
            prStmt = con.prepareStatement(sql);
            prStmt.setInt(1, Integer.parseInt(id));
            prStmt.executeUpdate();
             JOptionPane.showMessageDialog(this, "Delete Successfull :D");
                fetchEmployeeData();
                ResetForm();
                Create.setEnabled(true);
        } catch (SQLException ex) {
            Logger.getLogger(CreateEmployee.class.getName()).log(Level.SEVERE, null, ex);
        }
           
          
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        //create a Table model
        Create.setEnabled(false);
        
      try {
//            int cursor;
//            table = (DefaultTableModel)jTable1.getModel();
            int row = jTable1.getSelectedRow();
            String id = jTable1.getModel().getValueAt(row, 0).toString();
            rsSet = fetchSingleEmployee(id);
            ResultSetMetaData metaData = rsSet.getMetaData();
//            cursor = metaData.getColumnCount();
            
            
            while(rsSet.next())
            {
                //Each result get values
//              id , name , role, salary
                int salary = rsSet.getInt("salary");
                String email = rsSet.getString("email");
                String name = rsSet.getString("name");
                String role = rsSet.getString("role");
                String gemder = rsSet.getString("gender");
                String password = rsSet.getString("password");
                String address = rsSet.getString("address");
                
               //set the current employee
                nameInput.setText(name);
                emailInput.setText(email);
                addressInput.setText(address);
                salaryInput.setText(salary+"");
                passwordInput.setText(password);
                
                if(femaleRadio.getText().endsWith(gemder)){
                    femaleRadio.setSelected(true);
                     maleRadio.setSelected(false);
                }else{
                    femaleRadio.setSelected(false);
                    maleRadio.setSelected(true);
                }
                
                roleCbb.setSelectedItem(role);
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(CreateEmployee.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CreateEmployee().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Create;
    private javax.swing.JTextArea addressInput;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton editBtn;
    private javax.swing.JTextField emailInput;
    private javax.swing.JRadioButton femaleRadio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JRadioButton maleRadio;
    private javax.swing.JTextField nameInput;
    private javax.swing.JPasswordField passwordInput;
    private javax.swing.JComboBox<String> roleCbb;
    private javax.swing.JTextField salaryInput;
    // End of variables declaration//GEN-END:variables
}
